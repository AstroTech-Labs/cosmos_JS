"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.variableSlug = exports.getRoot = exports.getRelativePath = exports.UTILS = void 0;

var _utils = require("@osmonauts/utils");

var _path = require("path");

var getRoot = function getRoot(ref) {
  if (ref.traversed) return ref.traversed;
  return ref.proto;
};

exports.getRoot = getRoot;
var UTILS = {
  AminoHeight: '@osmonauts/helpers',
  AminoMsg: '@cosmjs/amino',
  AminoTypes: '@cosmjs/stargate',
  decodeBech32Pubkey: '@cosmjs/amino',
  defaultRegistryTypes: '@cosmjs/stargate',
  encodeBech32Pubkey: '@cosmjs/amino',
  fromBase64: '@cosmjs/encoding',
  fromBech32: '@cosmjs/encoding',
  fromDuration: '@osmonauts/helpers',
  fromHex: '@cosmjs/encoding',
  fromUtf8: '@cosmjs/encoding',
  fromJsonTimestamp: '@osmonauts/helpers',
  fromTimestamp: '@osmonauts/helpers',
  GeneratedType: '@cosmjs/proto-signing',
  isSet: '@osmonauts/helpers',
  isObject: '@osmonauts/helpers',
  Long: '@osmonauts/helpers',
  // exports Long and also calls the magic Long code
  // Long: { type: 'default', path: 'long', name: 'Long ' },
  OfflineSigner: '@cosmjs/proto-signing',
  omitDefault: '@osmonauts/helpers',
  Registry: '@cosmjs/proto-signing',
  SigningStargateClient: '@cosmjs/stargate',
  toBase64: '@cosmjs/encoding',
  toUtf8: '@cosmjs/encoding',
  toDuration: '@osmonauts/helpers',
  toTimestamp: '@osmonauts/helpers',
  bytesFromBase64: '@osmonauts/helpers',
  base64FromBytes: '@osmonauts/helpers',
  _m0: {
    type: 'namespace',
    path: 'protobufjs/minimal',
    name: '_m0'
  },
  Exact: '@osmonauts/helpers',
  Rpc: '@osmonauts/helpers',
  LCDClient: '@osmonauts/lcd',
  DeepPartial: '@osmonauts/helpers'
};
exports.UTILS = UTILS;

var getRelativePath = function getRelativePath(f1, f2) {
  var rel = (0, _path.relative)((0, _path.dirname)(f1), f2);
  var importPath = rel.replace((0, _path.extname)(rel), '');
  if (!/^\./.test(importPath)) importPath = "./".concat(importPath);
  return importPath;
};

exports.getRelativePath = getRelativePath;

var variableSlug = function variableSlug(str) {
  str = String(str).toString();
  str = str.replace(/\//g, '_');
  str = str.replace('.', '_');
  str = str.replace((0, _path.extname)(str), '');
  str = str.replace(/^\s+|\s+$/g, ""); // trim

  str = str.toLowerCase();
  str = str.replace(/[^a-z0-9_ -]/g, "") // remove invalid chars
  .replace(/\s+/g, "-") // collapse whitespace and replace by -
  .replace(/-/g, "");
  return (0, _utils.camel)(str);
};

exports.variableSlug = variableSlug;