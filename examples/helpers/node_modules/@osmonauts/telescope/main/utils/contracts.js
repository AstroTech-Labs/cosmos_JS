"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getDirectories = exports.getContracts = exports.getContractSchemata = void 0;

var _tsCodegen = require("@cosmwasm/ts-codegen");

var _case = require("case");

var _path = require("path");

var _fs = require("fs");

var getDirectories = function getDirectories(source) {
  return (0, _fs.readdirSync)(source, {
    withFileTypes: true
  }).filter(function (dirent) {
    return dirent.isDirectory();
  }).map(function (dirent) {
    return dirent.name;
  });
};

exports.getDirectories = getDirectories;

var getContracts = function getContracts() {
  var contracts = getDirectories('./contracts').map(function (contractDirname) {
    return {
      name: "".concat(contractDirname),
      value: "./contracts/".concat(contractDirname)
    };
  });
  return contracts;
};

exports.getContracts = getContracts;

var getContractSchemata = function getContractSchemata(schemata, out, argv) {
  return schemata.map(function (path) {
    var pkg = JSON.parse((0, _fs.readFileSync)((0, _path.join)(path, 'package.json'), 'utf-8'));
    var name = (0, _path.basename)(path);
    var folder = (0, _path.basename)((0, _path.dirname)(path));
    var contractName = (0, _case.pascal)(pkg.contract) || (0, _case.pascal)(name);
    var schemas = (0, _tsCodegen.readSchemas)({
      schemaDir: path,
      argv: argv
    });
    var outPath = (0, _path.join)(out, folder);
    return {
      contractName: contractName,
      schemas: schemas,
      outPath: outPath
    };
  });
};

exports.getContractSchemata = getContractSchemata;